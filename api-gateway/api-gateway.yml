# =============================================================================
# API GATEWAY CONFIGURATION FILES
# =============================================================================

# -----------------------------------------------------------------------------
# api-gateway/api-gateway.yml (Default Configuration)
# -----------------------------------------------------------------------------
server:
  port: 8080

spring:
  application:
    name: api-gateway
  
  cloud:
    gateway:
      # Global CORS Configuration
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origins: 
              - "http://localhost:3000"
              - "http://localhost:3001" 
              - "https://*.retailstore.com"
            allowed-methods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
              - PATCH
            allowed-headers: "*"
            allow-credentials: true
            max-age: 3600
      
      # Route Definitions
      routes:
        # Auth Service Routes
        - id: auth-service
          uri: lb://auth-service
          predicates:
            - Path=/api/v1/auth/**
          filters:
            - RewritePath=/api/v1/auth/(?<segment>.*), /${segment}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 100
                redis-rate-limiter.burst-capacity: 200
                key-resolver: "#{@userKeyResolver}"
        
        # Product Service Routes
        - id: product-service
          uri: lb://product-service
          predicates:
            - Path=/api/v1/products/**
          filters:
            - RewritePath=/api/v1/products/(?<segment>.*), /${segment}
            - name: CircuitBreaker
              args:
                name: product-service
                fallbackUri: forward:/fallback/products
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenish-rate: 200
                redis-rate-limiter.burst-capacity: 400
        
        # Order Service Routes
        - id: order-service
          uri: lb://order-service
          predicates:
            - Path=/api/v1/orders/**
          filters:
            - RewritePath=/api/v1/orders/(?<segment>.*), /${segment}
            - name: CircuitBreaker
              args:
                name: order-service
                fallbackUri: forward:/fallback/orders
            - JwtAuthenticationFilter
        
        # Payment Service Routes
        - id: payment-service
          uri: lb://payment-service
          predicates:
            - Path=/api/v1/payments/**
          filters:
            - RewritePath=/api/v1/payments/(?<segment>.*), /${segment}
            - name: CircuitBreaker
              args:
                name: payment-service
                fallbackUri: forward:/fallback/payments
            - JwtAuthenticationFilter
        
        # AI Recommendation Service Routes
        - id: ai-recommendation-service
          uri: lb://ai-recommendation-service
          predicates:
            - Path=/api/v1/recommendations/**
          filters:
            - RewritePath=/api/v1/recommendations/(?<segment>.*), /${segment}
            - name: CircuitBreaker
              args:
                name: ai-recommendation-service
                fallbackUri: forward:/fallback/recommendations
        
        # Discovery Service Route (for admin access)
        - id: discovery-service
          uri: lb://discovery-service
          predicates:
            - Path=/eureka/**
          filters:
            - AdminAuthenticationFilter
      
      # Default Filters
      default-filters:
        - DedupeResponseHeader=Access-Control-Allow-Credentials Access-Control-Allow-Origin
        - name: Retry
          args:
            retries: 3
            methods: GET
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms

# Security Configuration
jwt:
  secret: ${JWT_SECRET:mySecretKey}
  expiration: 86400000 # 24 hours